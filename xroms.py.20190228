from netCDF4 import Dataset, num2date, date2num
from scipy.interpolate import interp2d 
from glob import glob
import numpy as np, os 

fid = './ic_bdry/xroms_sst.nc'
#fid = './ic_bdry/xroms_sst_3.nc'

os.system('cp ./ic_bdry/xroms_sst.nc.sample '+fid)
units = 'days since 1900-01-01 00:00:00'


#-- Load Original Data --
sst,tim = [],[]
for ifid in glob('./input/copernicus_forecast_??.nc'):
#fid = './input/copernicus_forecast.nc'
	nc  = Dataset(ifid,'r+')
	tm  = nc.variables['ocean_time']; 
	tmp = num2date(tm[:],tm.units)	
	tm.units = units; 						#- change the time unit
	tm[:] = date2num(tmp,units)			#- change the value by unit
	lon = nc.variables['lon'][:]
	lat = nc.variables['lat'][:]
	tim.append( tmp )
	sst.append( nc.variables['temp'][:,0] )
	nc.close()



#-- Interpolate to XROMS grid and save --
nc  = Dataset(fid,'r+')
xc  = nc.variables['xc'][0,:]
yc  = nc.variables['yc'][:,0]
mask= nc.variables['mask'][:]
xroms = np.array([interp2d(lon,lat,
			sst[tid],fill_value=None, bounds_error=False)(xc,yc)
		  #np.ma.array(sst[tid],fill_value=np.nan))(xc,yc)) 
		  for tid in range(len(tim)) ])
tmp = nc.variables['time']
tmp[:len(tim)] = date2num(tim,tmp.units)
tmp = nc.variables['SST']
tmp[:len(tim)] = xroms
nc.close()
